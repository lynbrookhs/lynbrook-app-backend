# Generated by Django 3.2.5 on 2021-08-02 08:02

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('type', models.IntegerField(choices=[(1, 'Global'), (2, 'Class'), (3, 'Club')])),
                ('day', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('time', models.TimeField()),
                ('link', models.URLField()),
                ('admins', models.ManyToManyField(related_name='admin_organization_set', to=settings.AUTH_USER_MODEL)),
                ('advisors', models.ManyToManyField(related_name='advisor_organization_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('points', models.IntegerField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Select'), (2, 'Short Answer')])),
                ('description', models.TextField()),
                ('choices', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('min_values', models.IntegerField(default=1, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('max_values', models.IntegerField(default=1, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.post')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('points', models.IntegerField()),
                ('code', models.IntegerField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='poll',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('choices__isnull', True), ('max_values__isnull', True), ('min_values__isnull', True), ('type', 2)), models.Q(('choices__isnull', False), ('max_values__isnull', False), ('min_values__isnull', False), ('type', 1)), _connector='OR'), name='core_poll_type'),
        ),
    ]
